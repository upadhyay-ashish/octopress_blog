<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: app | MÃ¶bius Idea's]]></title>
  <link href="http://ashish-upadhyay.com/blog/categories/app/atom.xml" rel="self"/>
  <link href="http://ashish-upadhyay.com/"/>
  <updated>2013-03-31T06:13:56+05:30</updated>
  <id>http://ashish-upadhyay.com/</id>
  <author>
    <name><![CDATA[Ashish Upadhyay]]></name>
    <email><![CDATA[ashish.upadhyaye@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Creating a native iOS application !]]></title>
    <link href="http://ashish-upadhyay.com/blog/2012/06/13/Creating-a-native-iOS-application/"/>
    <updated>2012-06-13T19:47:34+05:30</updated>
    <id>http://ashish-upadhyay.com/blog/2012/06/13/Creating-a-native-iOS-application</id>
    <content type="html"><![CDATA[<h3>Installing XCode on the system</h3>

<ul>
<li>Download and install <code>XCode</code> from the App Center alongwith the <code>Developer Tools</code></li>
</ul>


<h3>Download the Phonegap SDK</h3>

<ul>
<li>Download and unzip the Phonegap SDK.</li>
<li>Now navigate to the <code>iOS directory</code> in the extracted source and run the <code>Cordova-1.7.0.dmg</code> and install it.</li>
</ul>


<h3>Creating a XCode Project</h3>

<p>Run <code>XCode</code> and create a new Project</p>

<p>Select the template</p>

<ul>
<li><code>Cordova-based Application</code></li>
</ul>


<p>This will create the a new project and include the neccesary Phonegap API Files.</p>

<h3>Changing the default compiler</h3>

<ul>
<li>Click on the application name and select <code>BUILD SETTINGS</code> tab in the center pane</li>
<li>Change the compiler in the <code>BUILD OPTIONS</code> from <code>APPLE LLVM COMPILER</code> to <code>LLVM GCC</code></li>
</ul>


<h3>Build and Run the Project</h3>

<ul>
<li>Click on the left top of the XCode window selecting the default device as iPad/iPhone Now run the Project. This would invoke the simulator and run the application on it.</li>
<li>Once the application runs a error will Popup stating the <code>index.html</code> is not found. Close the simulator and return back to the XCode project window.</li>
</ul>


<h3>Include <code>www</code> folder in the project to start with application development</h3>

<ul>
<li>Right click the project name and select <code>Show in Finder</code></li>
<li>Drag the <code>www</code> folder from the <code>Finder</code> to the <code>Project</code></li>
<li>A window pop's up , select to create references to the files.</li>
</ul>


<h3>Again <code>BUILD &amp;amp; RUN</code></h3>

<ul>
<li>Now again build and run the project in an iPad/iPhone simulatore</li>
<li>This time it would show up the <code>index.html</code> which is located in the <code>www</code> folder. Also it would show up the <code>Dialog</code> stating that Phonegap was successfully integrated in the application</li>
</ul>


<h3>Download JQuery Mobile bundle</h3>

<p>Download the latest build of JQuery Mobile from  Unzip the contents and add the files in the <code>www</code> folder categorizing the folders as</p>

<ul>
<li><code>javascripts</code></li>
<li><code>stylesheets</code></li>
<li>`images'</li>
</ul>


<h3>Including the JQuery mobile in the application</h3>

<ul>
<li>Open <code>index.html</code> and create references to the javascript and css files located in the <code>www</code> folder using the html tags</li>
</ul>


<h4>Add a few lines of HTML to the index page and use the JQuery classes and the Phonegap api function calls to implement the features of the native application as desired</h4>

<h3>* not tested though</h3>

<ul>
<li>Once the application is complete or for on Device testing a <code>Apple's Developer License</code> is required to sign the applications.</li>
<li>After signing it , push the application to <code>PhoneGap Build</code> .</li>
<li>Download the build package and deploy to th Device.</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Creating a native iOS application !]]></title>
    <link href="http://ashish-upadhyay.com/blog/2012/06/13/Creating-a-native-iOS-application/"/>
    <updated>2012-06-13T19:47:34+05:30</updated>
    <id>http://ashish-upadhyay.com/blog/2012/06/13/Creating-a-native-iOS-application</id>
    <content type="html"><![CDATA[<h3>Installing XCode on the system</h3>

<ul>
<li>Download and install <code>XCode</code> from the App Center alongwith the <code>Developer Tools</code></li>
</ul>


<h3>Download the Phonegap SDK</h3>

<ul>
<li>Download and unzip the Phonegap SDK.</li>
<li>Now navigate to the <code>iOS directory</code> in the extracted source and run the <code>Cordova-1.7.0.dmg</code> and install it.</li>
</ul>


<h3>Creating a XCode Project</h3>

<p>Run <code>XCode</code> and create a new Project</p>

<p>Select the template</p>

<ul>
<li><code>Cordova-based Application</code></li>
</ul>


<p>This will create the a new project and include the neccesary Phonegap API Files.</p>

<h3>Changing the default compiler</h3>

<ul>
<li>Click on the application name and select <code>BUILD SETTINGS</code> tab in the center pane</li>
<li>Change the compiler in the <code>BUILD OPTIONS</code> from <code>APPLE LLVM COMPILER</code> to <code>LLVM GCC</code></li>
</ul>


<h3>Build and Run the Project</h3>

<ul>
<li>Click on the left top of the XCode window selecting the default device as iPad/iPhone Now run the Project. This would invoke the simulator and run the application on it.</li>
<li>Once the application runs a error will Popup stating the <code>index.html</code> is not found. Close the simulator and return back to the XCode project window.</li>
</ul>


<h3>Include <code>www</code> folder in the project to start with application development</h3>

<ul>
<li>Right click the project name and select <code>Show in Finder</code></li>
<li>Drag the <code>www</code> folder from the <code>Finder</code> to the <code>Project</code></li>
<li>A window pop's up , select to create references to the files.</li>
</ul>


<h3>Again <code>BUILD &amp;amp; RUN</code></h3>

<ul>
<li>Now again build and run the project in an iPad/iPhone simulatore</li>
<li>This time it would show up the <code>index.html</code> which is located in the <code>www</code> folder. Also it would show up the <code>Dialog</code> stating that Phonegap was successfully integrated in the application</li>
</ul>


<h3>Download JQuery Mobile bundle</h3>

<p>Download the latest build of JQuery Mobile from  Unzip the contents and add the files in the <code>www</code> folder categorizing the folders as</p>

<ul>
<li><code>javascripts</code></li>
<li><code>stylesheets</code></li>
<li>`images'</li>
</ul>


<h3>Including the JQuery mobile in the application</h3>

<ul>
<li>Open <code>index.html</code> and create references to the javascript and css files located in the <code>www</code> folder using the html tags</li>
</ul>


<h4>Add a few lines of HTML to the index page and use the JQuery classes and the Phonegap api function calls to implement the features of the native application as desired</h4>

<h3>* not tested though</h3>

<ul>
<li>Once the application is complete or for on Device testing a <code>Apple's Developer License</code> is required to sign the applications.</li>
<li>After signing it , push the application to <code>PhoneGap Build</code> .</li>
<li>Download the build package and deploy to th Device.</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Creating a native iOS application !]]></title>
    <link href="http://ashish-upadhyay.com/blog/2012/06/13/Creating-a-native-iOS-application/"/>
    <updated>2012-06-13T19:47:34+05:30</updated>
    <id>http://ashish-upadhyay.com/blog/2012/06/13/Creating-a-native-iOS-application</id>
    <content type="html"><![CDATA[<h3>Installing XCode on the system</h3>

<ul>
<li>Download and install <code>XCode</code> from the App Center alongwith the <code>Developer Tools</code></li>
</ul>


<h3>Download the Phonegap SDK</h3>

<ul>
<li>Download and unzip the Phonegap SDK.</li>
<li>Now navigate to the <code>iOS directory</code> in the extracted source and run the <code>Cordova-1.7.0.dmg</code> and install it.</li>
</ul>


<h3>Creating a XCode Project</h3>

<p>Run <code>XCode</code> and create a new Project</p>

<p>Select the template</p>

<ul>
<li><code>Cordova-based Application</code></li>
</ul>


<p>This will create the a new project and include the neccesary Phonegap API Files.</p>

<h3>Changing the default compiler</h3>

<ul>
<li>Click on the application name and select <code>BUILD SETTINGS</code> tab in the center pane</li>
<li>Change the compiler in the <code>BUILD OPTIONS</code> from <code>APPLE LLVM COMPILER</code> to <code>LLVM GCC</code></li>
</ul>


<h3>Build and Run the Project</h3>

<ul>
<li>Click on the left top of the XCode window selecting the default device as iPad/iPhone Now run the Project. This would invoke the simulator and run the application on it.</li>
<li>Once the application runs a error will Popup stating the <code>index.html</code> is not found. Close the simulator and return back to the XCode project window.</li>
</ul>


<h3>Include <code>www</code> folder in the project to start with application development</h3>

<ul>
<li>Right click the project name and select <code>Show in Finder</code></li>
<li>Drag the <code>www</code> folder from the <code>Finder</code> to the <code>Project</code></li>
<li>A window pop's up , select to create references to the files.</li>
</ul>


<h3>Again <code>BUILD &amp;amp; RUN</code></h3>

<ul>
<li>Now again build and run the project in an iPad/iPhone simulatore</li>
<li>This time it would show up the <code>index.html</code> which is located in the <code>www</code> folder. Also it would show up the <code>Dialog</code> stating that Phonegap was successfully integrated in the application</li>
</ul>


<h3>Download JQuery Mobile bundle</h3>

<p>Download the latest build of JQuery Mobile from  Unzip the contents and add the files in the <code>www</code> folder categorizing the folders as</p>

<ul>
<li><code>javascripts</code></li>
<li><code>stylesheets</code></li>
<li>`images'</li>
</ul>


<h3>Including the JQuery mobile in the application</h3>

<ul>
<li>Open <code>index.html</code> and create references to the javascript and css files located in the <code>www</code> folder using the html tags</li>
</ul>


<h4>Add a few lines of HTML to the index page and use the JQuery classes and the Phonegap api function calls to implement the features of the native application as desired</h4>

<h3>* not tested though</h3>

<ul>
<li>Once the application is complete or for on Device testing a <code>Apple's Developer License</code> is required to sign the applications.</li>
<li>After signing it , push the application to <code>PhoneGap Build</code> .</li>
<li>Download the build package and deploy to th Device.</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Creating a native iOS application !]]></title>
    <link href="http://ashish-upadhyay.com/blog/2012/06/13/Creating-a-native-iOS-application/"/>
    <updated>2012-06-13T19:47:34+05:30</updated>
    <id>http://ashish-upadhyay.com/blog/2012/06/13/Creating-a-native-iOS-application</id>
    <content type="html"><![CDATA[<h3>Installing XCode on the system</h3>

<ul>
<li>Download and install <code>XCode</code> from the App Center alongwith the <code>Developer Tools</code></li>
</ul>


<h3>Download the Phonegap SDK</h3>

<ul>
<li>Download and unzip the Phonegap SDK.</li>
<li>Now navigate to the <code>iOS directory</code> in the extracted source and run the <code>Cordova-1.7.0.dmg</code> and install it.</li>
</ul>


<h3>Creating a XCode Project</h3>

<p>Run <code>XCode</code> and create a new Project</p>

<p>Select the template</p>

<ul>
<li><code>Cordova-based Application</code></li>
</ul>


<p>This will create the a new project and include the neccesary Phonegap API Files.</p>

<h3>Changing the default compiler</h3>

<ul>
<li>Click on the application name and select <code>BUILD SETTINGS</code> tab in the center pane</li>
<li>Change the compiler in the <code>BUILD OPTIONS</code> from <code>APPLE LLVM COMPILER</code> to <code>LLVM GCC</code></li>
</ul>


<h3>Build and Run the Project</h3>

<ul>
<li>Click on the left top of the XCode window selecting the default device as iPad/iPhone Now run the Project. This would invoke the simulator and run the application on it.</li>
<li>Once the application runs a error will Popup stating the <code>index.html</code> is not found. Close the simulator and return back to the XCode project window.</li>
</ul>


<h3>Include <code>www</code> folder in the project to start with application development</h3>

<ul>
<li>Right click the project name and select <code>Show in Finder</code></li>
<li>Drag the <code>www</code> folder from the <code>Finder</code> to the <code>Project</code></li>
<li>A window pop's up , select to create references to the files.</li>
</ul>


<h3>Again <code>BUILD &amp;amp; RUN</code></h3>

<ul>
<li>Now again build and run the project in an iPad/iPhone simulatore</li>
<li>This time it would show up the <code>index.html</code> which is located in the <code>www</code> folder. Also it would show up the <code>Dialog</code> stating that Phonegap was successfully integrated in the application</li>
</ul>


<h3>Download JQuery Mobile bundle</h3>

<p>Download the latest build of JQuery Mobile from  Unzip the contents and add the files in the <code>www</code> folder categorizing the folders as</p>

<ul>
<li><code>javascripts</code></li>
<li><code>stylesheets</code></li>
<li>`images'</li>
</ul>


<h3>Including the JQuery mobile in the application</h3>

<ul>
<li>Open <code>index.html</code> and create references to the javascript and css files located in the <code>www</code> folder using the html tags</li>
</ul>


<h4>Add a few lines of HTML to the index page and use the JQuery classes and the Phonegap api function calls to implement the features of the native application as desired</h4>

<h3>* not tested though</h3>

<ul>
<li>Once the application is complete or for on Device testing a <code>Apple's Developer License</code> is required to sign the applications.</li>
<li>After signing it , push the application to <code>PhoneGap Build</code> .</li>
<li>Download the build package and deploy to th Device.</li>
</ul>

]]></content>
  </entry>
  
</feed>
