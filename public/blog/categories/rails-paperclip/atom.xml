<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: rails-paperclip | MÃ¶bius Idea's]]></title>
  <link href="http://www.ashish-upadhyay.com/blog/categories/rails-paperclip/atom.xml" rel="self"/>
  <link href="http://www.ashish-upadhyay.com/"/>
  <updated>2013-03-31T08:51:23+05:30</updated>
  <id>http://www.ashish-upadhyay.com/</id>
  <author>
    <name><![CDATA[Ashish Upadhyay]]></name>
    <email><![CDATA[ashish.upadhyaye@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Using nested_forms gem + dropbox-paperclip + twitter-bootstrap]]></title>
    <link href="http://www.ashish-upadhyay.com/blog/2012/12/08/Using-nested_forms-gem-dropbox-paperclip-twitter-bootstrap/"/>
    <updated>2012-12-08T13:55:52+05:30</updated>
    <id>http://www.ashish-upadhyay.com/blog/2012/12/08/Using-nested_forms-gem-dropbox-paperclip-twitter-bootstrap</id>
    <content type="html"><![CDATA[<h4>This is a tutorial about using nested_forms gem with dropbox-paperclip plugin on Heroku to create a multiple photo upload albums interface with twitter bootstrap</h4>

<p><a href="http://ashish-albums.herokuapp.com">Demo application</a></p>

<ul>
<li>Create a new rails app and add the gems to Gemfile.**<br/>
<div>
  <pre><code class='ruby'>&lt;pre&gt;&lt;code&gt;  paperclip
  paperclip-dropbox
  nested_form     
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;</code></pre>
</div>

+ Create 3 models**<br/>
   <div>
  <pre><code class='ruby'>&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    rails g model User name:string  
    rails g model Album name:string user_id:integer
    rails g model Photo tags_name:string album_id:integer    
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;</code></pre>
</div>

+ Adding relationships among models</p>

<h4>in app/models/user.rb</h4>

<p><div>
  <pre><code class='ruby'>&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    has_many :albums, :dependent =:destroy  
    accepts_nested_attributes_for :albums  
    attr_accessible :name, :albums_attributes  
    validates_presence_of :name    
    belongs_to :user   
    has_many :photos, :dependent =:destroy  
    accepts_nested_attributes_for :photos, :allow_destroy =true  
    attr_accessible :name, :photos_attributes  
    validates_presence_of :name   
    belongs_to :album  
    attr_accessible :avatar, :tags_name  
    has_attached_file :avatar,  
    :storage =:dropbox,  
    :dropbox_credentials =&quot;#{Rails.root}/config/dropbox.yml&quot;,  
    :styles ={ :thumb =&quot;100x100&quot; },  
    :dropbox_options ={  
    :path =proc { |style| &quot;#{style}/#{id}_#{avatar.original_filename}&quot;}  
    }  
    validates_presence_of :avatar   
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;</code></pre>
</div>

+ Adding a controller and a few actions**<br/>
<div>
  <pre><code class='ruby'>&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;rails g controller Users 
    add following code to the controller 
    def index  
     @users = User.all  
    end  

    def new  
     @user = User.new  
    end  

    def create  
     @user = User.new(params[:user])  
     if @user.save  
      redirect_to root_url  
      else  
       redirect_to root_url  
     end  
    end  

    def show_albums  
     @albums = Album.find(params[:id])  
    end  

    def destroy  
     @user = User.find(params[:id])  
     @user.destroy  
     redirect_to root_url  
    end 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;</code></pre>
</div>
<br/>
+ Adding routes to routes.rb
<div>
  <pre><code class='ruby'>&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    resources :users do  
     member do  
     get 'show_albums'  
     end  
    end  
    root :to ='users#index'  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;</code></pre>
</div>

+ Creating views for forms and data show<br/>
<div>
  <pre><code class='ruby'>&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    index.html.erb
    new.html.erb
    show_albums.html.erb
    _album_fields.html.erb
    _photo_fields.html.erb
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;</code></pre>
</div>
<br/>
 + Adding form html to views<strong><br/>
  #### in index.html.erb :</strong><br/>
<div>
  <pre><code class='ruby'>&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    &amp;lt;%= link_to 'New User', new_user_path , :class =&amp;gt; 'btn btn-medium btn-primary pull-right'%&amp;gt;
    &amp;lt;table class=&quot;table table-striped&quot;&amp;gt;
    &amp;lt;tr&amp;gt;
    &amp;lt;th&amp;gt;Name&amp;lt;/th&amp;gt;
    &amp;lt;th&amp;gt;Album Names&amp;lt;/th&amp;gt;
    &amp;lt;!--th&amp;gt;Tags&amp;lt;/th--&amp;gt;
    &amp;lt;th&amp;gt;Destroy&amp;lt;/th&amp;gt;
    &amp;lt;/tr&amp;gt;
    &amp;lt;% @users.each do |user| %&amp;gt;
    &amp;lt;tr&amp;gt;
    &amp;lt;td&amp;gt;&amp;lt;%= user.name %&amp;gt;&amp;lt;/td&amp;gt;
    &amp;lt;td&amp;gt;
      &amp;lt;% (user_albums_link user).each do |album_link| %&amp;gt;
        &amp;lt;%= album_link.html_safe %&amp;gt;
      &amp;lt;% end %&amp;gt;
     &amp;lt;% thumbnails = show_photo_thumbnails(user.albums) if user.albums %&amp;gt;
     &amp;lt;% if thumbnails %&amp;gt;
        &amp;lt;% thumbnails.each do |thumb| %&amp;gt;
          &amp;lt;%= thumb.html_safe  %&amp;gt;
        &amp;lt;% end %&amp;gt;
     &amp;lt;% end %&amp;gt;
    &amp;lt;/td&amp;gt;
    &amp;lt;!--td&amp;gt;
      &amp;lt;%#= tags user.albums %&amp;gt;
    &amp;lt;/td--&amp;gt;
    &amp;lt;td&amp;gt;
        &amp;lt;%= link_to t('.destroy', :default =&amp;gt; t(&quot;helpers.links.destroy&quot;)),
          user_path(user),
          :method =&amp;gt; :delete,
          :data =&amp;gt; { :confirm =&amp;gt; t('.confirm', 
          :default =&amp;gt; t(&quot;helpers.links.confirm&quot;, :default =&amp;gt; 'Are you sure?')) },
          :class =&amp;gt; 'btn btn-mini btn-danger' %&amp;gt;
    &amp;lt;/td&amp;gt;
    &amp;lt;/tr&amp;gt;
    &amp;lt;% end %&amp;gt;
    &amp;lt;/table&amp;gt;
    &amp;lt;br /&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;</code></pre>
</div>
</p>

<ul>
<li>in new.html.erb
<div>
  <pre><code class='ruby'>&lt;pre&gt;&lt;code&gt;  &amp;lt;%= nested_form_for @user, :html =&amp;gt; { :multipart =&amp;gt; true } do |f| %&amp;gt;
  &amp;lt;div class=&quot;controls&quot;&amp;gt;
    Username :
    &amp;lt;%= f.text_field :name, :class =&amp;gt; 'text_field' %&amp;gt;
  &amp;lt;/div&amp;gt;
  &amp;lt;%= f.fields_for :albums %&amp;gt;
  &amp;lt;%= f.link_to_add &quot;Add an album&quot;, :albums %&amp;gt;
  &amp;lt;br /&amp;gt;
  &amp;lt;br /&amp;gt;
  &amp;lt;div class=&quot;controls&quot;&amp;gt;
    &amp;lt;%= f.submit nil, :class =&amp;gt; 'btn btn-primary' %&amp;gt;
  &amp;lt;/div&amp;gt;
  &amp;lt;% end %&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;</code></pre>
</div>

+ in _album_fields.html.erb
<div>
  <pre><code class='ruby'>&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    &amp;lt;div class=&quot;controls&quot;&amp;gt;
      Album Name :
      &amp;lt;%= f.text_field :name, :class =&amp;gt; 'text_field' %&amp;gt;
      &amp;lt;%= f.link_to_remove &quot;Remove this album&quot; %&amp;gt;
      &amp;lt;%= f.fields_for :photos %&amp;gt;
        &amp;lt;p&amp;gt;
        &amp;lt;%= f.link_to_add &quot;Add a photo&quot;, :photos %&amp;gt;
        &amp;lt;/p&amp;gt;
    &amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;</code></pre>
</div>

+ in _photo_fields.html.erb
<div>
  <pre><code class='ruby'>&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    &amp;lt;div class=&quot;controls offset1&quot;&amp;gt;
      File :
      &amp;lt;%= f.text_field :tags_name %&amp;gt;
      &amp;lt;%= f.file_field :avatar %&amp;gt;
      &amp;lt;%= f.link_to_remove &quot;Remove this photo&quot; %&amp;gt;
    &amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;</code></pre>
</div>

+ in show_albums.html.erb
<div>
  <pre><code class='ruby'>&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    &amp;lt;% thumbnails = get_photos(@albums) if @albums %&amp;gt;
     &amp;lt;% if thumbnails %&amp;gt;
        &amp;lt;% thumbnails.each do |thumb| %&amp;gt;
          &amp;lt;%= thumb.html_safe  %&amp;gt;
        &amp;lt;% end %&amp;gt;
     &amp;lt;% end %&amp;gt;
     &amp;lt;%= show_tags @albums %&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;</code></pre>
</div>

+ Add dropbox.yml in config folder with following data :**  <br/>
<div>
  <pre><code class='ruby'>&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    app_key:    
    app_secret:    
    access_token:    
    access_token_secret:    
    user_id:
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;</code></pre>
</div>
  <br/>
+ These variables are Environment variables in environments files.</p>

<ul>
<li>For detailed setup for paperclip-dropbox gem <a href="https://github.com/janko-m/paperclip-dropbox">paperclip-dropbox</a></li>
<li>Setup Twitter Bootstrap **<br/>
<div>
  <pre><code class='ruby'>&lt;pre&gt;&lt;code&gt;  rails generate bootstrap:install less  
  rails g bootstrap:layout application fixed**Step 10 : Run the application :**  
  bundle  
  rake db:create  
  rake db:migrate  
  rails s     
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;</code></pre>
</div>
</p>
]]></content>
  </entry>
  
</feed>
